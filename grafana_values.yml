ingress:
  enabled: true
  annotations: 
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$request_uri"
  labels: {}
  path: /
  hosts:
    - grafana.swhurl.com
  tls: 
    - secretName: grafana-swhurl-com-tls
      hosts:
        - grafana.swhurl.com

resources: 
 limits:
   cpu: 100m
   memory: 128Mi
 requests:
   cpu: 100m
   memory: 128Mi

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  storageClassName: hostpath
  accessModes:
    - ReadWriteOnce
  size: 10Gi

## Extra environment variables that will be pass onto deployment pods
env: 
  GF_AUTH_ANONYMOUS_ENABLED: "true"

## Configure grafana datasources
## ref: http://docs.grafana.org/administration/provisioning/#datasources
##
datasources: 
 datasources.yaml:
   apiVersion: 1
   datasources:
   - name: Prometheus
     type: prometheus
     url: http://mon-prometheus-server
     access: proxy
     isDefault: true

## Configure grafana dashboard providers
## ref: http://docs.grafana.org/administration/provisioning/#dashboards
##
## `path` must be /var/lib/grafana/dashboards/<provider_name>
##
dashboardProviders: 
 dashboardproviders.yaml:
   apiVersion: 1
   providers:
   - name: 'default'
     orgId: 1
     folder: ''
     type: file
     disableDeletion: false
     editable: true
     options:
       path: /var/lib/grafana/dashboards/default

## Configure grafana dashboard to import
## NOTE: To use dashboards you must also enable/configure dashboardProviders
## ref: https://grafana.com/dashboards
##
## dashboards per provider, use provider name as key.
##
dashboards: 
 default:
   # some-dashboard:
   #   json: |
   #     $RAW_JSON
   kube-dash:
     gnetId: 315
     revision: 3
     datasource: Prometheus
   kube-cluster-summary:
     gnetId: 6417
     revision: 1
     datasource: Prometheus
   node-view:
     gnetId: 1860
     revision: 12
     datasource: Prometheus
   prometheus-stats:
     gnetId: 2
     revision: 2
     datasource: Prometheus

